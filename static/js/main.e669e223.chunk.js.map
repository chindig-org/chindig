{"version":3,"sources":["Navbar.js","Suggested.js","Tabs.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Settings_default","Typography_default","variant","Button_default","Search_default","events","require","styles","theme","input","display","Suggested","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","datetime","moment","format","_this2","map","event","i","Grid_default","item","xs","sm","md","lg","xl","key","src","concat","image","alt","Chip_default","label","tag","name","location","getDate","start","getTime","button","container","spacing","Component","TabContainer","component","style","padding","children","SimpleTabs","value","handleChange","setState","Tabs_default","onChange","centered","fullWidth","Tab_default","src_Suggested","React","backgroundColor","palette","background","paper","createMuiTheme","primary","main","secondary","light","contrastText","typography","useNextVariants","RouteWithProps","_ref","extraProps","objectWithoutProperties","Route","assign","render","routeProps","App","HashRouter","src_Navbar","App_RouteWithProps","exact","path","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e669e223.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport GearIcon from '@material-ui/icons/Settings';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n  },\n};\n\n\nfunction Navbar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root} >\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <GearIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            <div className=\"logo\">Chindig</div>\n          </Typography>\n          <Button className={classes.menuButton} color=\"inherit\" aria-label=\"Search\">\n            <SearchIcon />\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Navbar);\n","import React, { Component } from 'react';\nimport moment from '../node_modules/moment';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid'\n\n// include mock data as part of js bundle for now.\nconst events = require('./mock-data/events.json');\n\n\nconst styles = theme => ({\n  input: {\n    display: 'none',\n  },\n});\n\n\nclass Suggested extends Component {\n\n  constructor(props) {\n      super(props)\n\n      this.state = {\n        events: events\n      };\n  }\n\n  componentDidMount() {\n  }\n\n  getDate(datetime) {\n    return moment(datetime).format('dddd, MMM Do');\n  }\n\n  getTime(datetime) {\n    return moment(datetime).format('h:mm a');\n  }\n\n  render() {\n    let events = this.state.events.map((event, i) =>\n      <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={i} >\n        <div className=\"event\">\n          <img src={`./${event.image}`} alt=\"test\" />\n\n          <div className=\"event-tag\">\n            <Chip label={event.tag} color=\"secondary\" />\n          </div>\n\n          <div className=\"event-text\">\n            <div className=\"name\">{event.name}</div>\n            <div className=\"location\">@ {event.location}</div>\n\n            <div className=\"day\">{this.getDate(event.start)}</div>\n            <div className=\"time\">{this.getTime(event.start)}</div>\n          </div>\n\n          <div className=\"event-save\">\n            <Button variant=\"contained\" color=\"primary\" className={styles.button}>\n              Save\n            </Button>\n          </div>\n        </div>\n      </Grid>\n    )\n\n    return (\n      <div>\n        <Grid container spacing={24}>\n          { events }\n        </Grid>\n\n      </div>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(Suggested);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\n\nimport Suggested from './Suggested';\n\nfunction TabContainer(props) {\n  return (\n    <Typography component=\"div\" style={{ padding: 8 * 3 }}>\n      {props.children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n});\n\nclass SimpleTabs extends React.Component {\n  state = {\n    value: 0,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" className={classes.grow}>\n          <Tabs value={value} onChange={this.handleChange} centered fullWidth>\n            <Tab label=\"Suggested\" />\n            <Tab label=\"Past\" />\n            <Tab label=\"Upcoming (0)\" />\n          </Tabs>\n        </AppBar>\n        {value === 0 &&\n          <TabContainer>\n          <Suggested />\n          </TabContainer>}\n        {value === 1 &&\n          <TabContainer>Past</TabContainer>}\n        {value === 2 &&\n          <TabContainer>Saved</TabContainer>\n        }\n      </div>\n    );\n  }\n}\n\nSimpleTabs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SimpleTabs);\n","import React, { Component } from 'react';\nimport './App.css';\n\n\nimport Navbar from './Navbar'\nimport SimpleTabs from './Tabs';\n\nimport { HashRouter as Router, Route} from 'react-router-dom';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#009bd1',\n    },\n    secondary: {\n      light: '#0066ff',\n      main: '#0044ff',\n      contrastText: '#ffcc00',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  }\n});\n\nconst RouteWithProps = ({ component: Component, props, ...extraProps }) => (\n  <Route\n    {...extraProps}\n    render={routeProps => <Component {...props} {...routeProps} />}\n  />\n);\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <MuiThemeProvider theme={theme}>\n          <Navbar />\n\n          <RouteWithProps exact path='/' component={SimpleTabs}/>\n          <RouteWithProps path='/profile' component={SimpleTabs}/>\n          <RouteWithProps path='/event/:id' component={SimpleTabs}/>\n          {/*<RouteWithProps exact path='/about' component={About}/>*/}\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}